{"version":3,"sources":["redux/configureStore.js","redux/Global.js","redux/ActionTypes.js","redux/Country.js","redux/India.js","AutocompleteText.jsx","Footer.jsx","redux/ActionCreators.js","Covid.jsx","App.js","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","global","state","errMess","data","loading","action","type","payload","country","india","AutocompleteText","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","newCountry","onKeyDown","keyCode","length","suggestionsListComponent","this","className","map","index","key","placeholder","React","Component","defaultProps","Footer","href","target","rel","baseUrl","loadingGlobalData","addGlobalData","errorGlobalData","error","loadingCountryData","addCountryData","errorCountryData","loadingIndiaData","addIndiaData","errorIndiaData","Covid","fetchGlobalData","fetchCountryData","fetchIndiaData","console","log","id","globalError","globalLoading","Global","TotalConfirmed","TotalDeaths","TotalRecovered","countryError","countryLoading","Country","slice","Confirmed","Deaths","Recovered","Active","indiaError","indiaLoading","indiaData","stateName","confirmed","active","deaths","recovered","indiaChartData","options","layout","padding","top","bottom","maintainAspectRatio","title","display","text","fontColor","legend","scales","gridLines","color","yAxes","ticks","beginAtZero","stepSize","xAxes","connect","dispatch","fetch","then","response","ok","Error","json","catch","body","getReader","reader","read","utfObj","utf","td","TextDecoder","JSON","parse","decode","jsonData","labels","datasets","totalConfirmed","label","borderColor","pointBackgroundColor","hoverBorderColor","pointHoverRadius","totalDeaths","totalRecovered","stateData","statewise","i","push","chartData","cases_time_series","chartPoint","date","totalconfirmed","totaldeceased","totalrecovered","err","store","createStore","applyMiddleware","thunk","logger","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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CACrB3B,YAAa,CACZ,WACA,YACA,YACA,WACA,QACA,YACA,QACA,kBACA,YACA,2BACA,UACA,4BACA,WACA,SACA,OACA,UACA,UACA,SACA,UACA,UACA,aACA,WACA,2BACA,OACA,mBACA,aACA,WACA,UACA,SACA,QACA,cACA,SACA,QACA,UACA,UACA,UACA,eACA,iBACA,UACA,SACA,aACA,OACA,WACA,aACA,WACA,yBACA,UACA,SACA,UACA,SACA,UACA,WACA,UACA,YACA,QACA,UACA,UACA,UACA,iBACA,8BACA,WACA,WACA,aACA,4BACA,aACA,iBACA,yBACA,UACA,QACA,WACA,SACA,cACA,QACA,YACA,iBACA,aACA,sBACA,SACA,UACA,QACA,UACA,QACA,UACA,aACA,QACA,aACA,cACA,SACA,oBACA,cACA,WACA,wBACA,cACA,cACA,SACA,YACA,UACA,YACA,QACA,aACA,iBACA,UACA,aACA,QACA,eACA,aACA,6BACA,WACA,OACA,2BACA,QACA,UACA,UACA,sBACA,eACA,gBACA,UACA,uBACA,UACA,UACA,UACA,aACA,SACA,OACA,YACA,cACA,QACA,SACA,eACA,UACA,wBACA,aACA,cACA,gBACA,cACA,SACA,WACA,mBACA,sBACA,aACA,UACA,QACA,iCACA,oBACA,8BACA,SACA,mCACA,iBACA,oBACA,SACA,QACA,mBACA,YACA,SACA,QACA,aACA,sBACA,wBACA,SACA,SACA,UACA,eACA,cACA,QACA,cACA,gBACA,OACA,WACA,QACA,gBACA,+CACA,UACA,SACA,2BACA,iBACA,UACA,QACA,WACA,OACA,4BACA,SACA,QACA,cACA,WACA,UACA,UACA,4BACA,eACA,QACA,YACA,gBACA,aACA,OACA,SACA,SACA,WACA,WACA,UACA,SACA,QACA,UACA,SACA,iBACA,OACA,SACA,cACA,UACA,qBACA,kBACA,UACA,WACA,WACA,WACA,UACA,aACA,aACA,SACA,UACA,iCACA,SACA,OACA,OACA,aACA,aACA,WACA,YACA,SACA,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","file":"static/js/main.be57b8d3.chunk.js","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport Global from \"./Global\";\nimport Country from \"./Country\";\nimport India from \"./India\";\n\nconst rootReducer = combineReducers({\n\tglobal: Global,\n\tcountry: Country,\n\tindia: India,\n});\nexport const ConfigureStore = () => {\n\tconsole.log(\"Store config\");\n\treturn createStore(rootReducer, applyMiddleware(...[thunk, logger]));\n};\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport default function Global(\n\tstate = {\n\t\terrMess: null,\n\t\tdata: null,\n\t\tloading: true,\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase ActionTypes.LOADING_GLOBAL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t\terrMess: \"ERR_NONE\",\n\t\t\t\tdata: action.payload,\n\t\t\t};\n\t\tcase ActionTypes.ADD_GLOBAL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terrMess: \"ERR_NONE\",\n\t\t\t\tdata: action.payload,\n\t\t\t};\n\t\tcase ActionTypes.ERROR_GLOBAL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terrMess: \"ERR_TRUE\",\n\t\t\t\tdata: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","export const LOADING_GLOBAL = \"LOADING_GLOBAL\";\nexport const ADD_GLOBAL = \"ADD_GLOBAL\";\nexport const ERROR_GLOBAL = \"ERROR_GLOBAL\";\n\nexport const LOADING_COUNTRY = \"LOADING_COUNTRY\";\nexport const ADD_COUNTRY = \"ADD_COUNTRY\";\nexport const ERROR_COUNTRY = \"ERROR_COUNTRY\";\n\nexport const LOADING_INDIA = \"LOADING_INDIA\";\nexport const ADD_INDIA = \"ADD_INDIA\";\nexport const ERROR_INDIA = \"ERROR_INDIA\";\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport default function Country(\n\tstate = {\n\t\terrMess: null,\n\t\tdata: null,\n\t\tloading: true,\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase ActionTypes.LOADING_COUNTRY:\n\t\t\treturn { ...state, loading: true, errMess: \"ERR_NONE\", data: {} };\n\t\tcase ActionTypes.ADD_COUNTRY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terrMess: \"ERR_NONE\",\n\t\t\t\tdata: action.payload,\n\t\t\t};\n\t\tcase ActionTypes.ERROR_COUNTRY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terrMess: \"ERR_TRUE\",\n\t\t\t\tdata: action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import * as ActionTypes from \"./ActionTypes\";\n\nexport default function India(\n\tstate = {\n\t\terrMess: \"ERR_NONE\",\n\t\tloading: true,\n\t\tdata: null,\n\t},\n\taction\n) {\n\tswitch (action.type) {\n\t\tcase ActionTypes.LOADING_INDIA:\n\t\t\treturn { ...state, data: null };\n\t\tcase ActionTypes.ADD_INDIA:\n\t\t\treturn { ...state, loading: false, data: action.payload };\n\t\tcase ActionTypes.ERROR_INDIA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\tdata: action.payload,\n\t\t\t\terrMess: \"ERR_TRUE\",\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React, { Fragment } from \"react\";\nimport \"./css/Input.css\";\n\nexport default class AutocompleteText extends React.Component {\n\tstatic defaultProps = {\n\t\tsuggestions: [\n\t\t\t\"barbados\",\n\t\t\t\"gibraltar\",\n\t\t\t\"lithuania\",\n\t\t\t\"malaysia\",\n\t\t\t\"nauru\",\n\t\t\t\"palestine\",\n\t\t\t\"qatar\",\n\t\t\t\"solomon-islands\",\n\t\t\t\"sri-lanka\",\n\t\t\t\"turks-and-caicos-islands\",\n\t\t\t\"vanuatu\",\n\t\t\t\"wallis-and-futuna-islands\",\n\t\t\t\"dominica\",\n\t\t\t\"gambia\",\n\t\t\t\"iran\",\n\t\t\t\"namibia\",\n\t\t\t\"tokelau\",\n\t\t\t\"guinea\",\n\t\t\t\"morocco\",\n\t\t\t\"tunisia\",\n\t\t\t\"azerbaijan\",\n\t\t\t\"honduras\",\n\t\t\t\"saint-martin-french-part\",\n\t\t\t\"chad\",\n\t\t\t\"christmas-island\",\n\t\t\t\"costa-rica\",\n\t\t\t\"bulgaria\",\n\t\t\t\"denmark\",\n\t\t\t\"malawi\",\n\t\t\t\"nepal\",\n\t\t\t\"switzerland\",\n\t\t\t\"canada\",\n\t\t\t\"china\",\n\t\t\t\"grenada\",\n\t\t\t\"andorra\",\n\t\t\t\"belgium\",\n\t\t\t\"burkina-faso\",\n\t\t\t\"cayman-islands\",\n\t\t\t\"estonia\",\n\t\t\t\"jersey\",\n\t\t\t\"montserrat\",\n\t\t\t\"oman\",\n\t\t\t\"cameroon\",\n\t\t\t\"luxembourg\",\n\t\t\t\"slovakia\",\n\t\t\t\"bosnia-and-herzegovina\",\n\t\t\t\"moldova\",\n\t\t\t\"brunei\",\n\t\t\t\"eritrea\",\n\t\t\t\"jordan\",\n\t\t\t\"liberia\",\n\t\t\t\"portugal\",\n\t\t\t\"ukraine\",\n\t\t\t\"indonesia\",\n\t\t\t\"kenya\",\n\t\t\t\"georgia\",\n\t\t\t\"iceland\",\n\t\t\t\"jamaica\",\n\t\t\t\"norfolk-island\",\n\t\t\t\"french-southern-territories\",\n\t\t\t\"guernsey\",\n\t\t\t\"paraguay\",\n\t\t\t\"tajikistan\",\n\t\t\t\"us-minor-outlying-islands\",\n\t\t\t\"uzbekistan\",\n\t\t\t\"american-samoa\",\n\t\t\t\"british-virgin-islands\",\n\t\t\t\"finland\",\n\t\t\t\"malta\",\n\t\t\t\"botswana\",\n\t\t\t\"israel\",\n\t\t\t\"saint-lucia\",\n\t\t\t\"spain\",\n\t\t\t\"argentina\",\n\t\t\t\"congo-kinshasa\",\n\t\t\t\"réunion\",\n\t\t\t\"saint-barthélemy\",\n\t\t\t\"zambia\",\n\t\t\t\"bahrain\",\n\t\t\t\"chile\",\n\t\t\t\"uruguay\",\n\t\t\t\"yemen\",\n\t\t\t\"austria\",\n\t\t\t\"bangladesh\",\n\t\t\t\"italy\",\n\t\t\t\"micronesia\",\n\t\t\t\"puerto-rico\",\n\t\t\t\"tuvalu\",\n\t\t\t\"ala-aland-islands\",\n\t\t\t\"afghanistan\",\n\t\t\t\"cambodia\",\n\t\t\t\"sao-tome-and-principe\",\n\t\t\t\"korea-north\",\n\t\t\t\"new-zealand\",\n\t\t\t\"turkey\",\n\t\t\t\"greenland\",\n\t\t\t\"hungary\",\n\t\t\t\"australia\",\n\t\t\t\"india\",\n\t\t\t\"san-marino\",\n\t\t\t\"united-kingdom\",\n\t\t\t\"comoros\",\n\t\t\t\"mauritania\",\n\t\t\t\"benin\",\n\t\t\t\"cote-divoire\",\n\t\t\t\"guadeloupe\",\n\t\t\t\"heard-and-mcdonald-islands\",\n\t\t\t\"kiribati\",\n\t\t\t\"mali\",\n\t\t\t\"northern-mariana-islands\",\n\t\t\t\"palau\",\n\t\t\t\"myanmar\",\n\t\t\t\"somalia\",\n\t\t\t\"trinidad-and-tobago\",\n\t\t\t\"turkmenistan\",\n\t\t\t\"french-guiana\",\n\t\t\t\"lao-pdr\",\n\t\t\t\"united-arab-emirates\",\n\t\t\t\"albania\",\n\t\t\t\"ireland\",\n\t\t\t\"burundi\",\n\t\t\t\"cape-verde\",\n\t\t\t\"greece\",\n\t\t\t\"guam\",\n\t\t\t\"guatemala\",\n\t\t\t\"korea-south\",\n\t\t\t\"niger\",\n\t\t\t\"panama\",\n\t\t\t\"saint-helena\",\n\t\t\t\"vietnam\",\n\t\t\t\"saint-kitts-and-nevis\",\n\t\t\t\"seychelles\",\n\t\t\t\"timor-leste\",\n\t\t\t\"bouvet-island\",\n\t\t\t\"el-salvador\",\n\t\t\t\"russia\",\n\t\t\t\"slovenia\",\n\t\t\t\"french-polynesia\",\n\t\t\t\"hong-kong-sar-china\",\n\t\t\t\"madagascar\",\n\t\t\t\"nigeria\",\n\t\t\t\"samoa\",\n\t\t\t\"british-indian-ocean-territory\",\n\t\t\t\"equatorial-guinea\",\n\t\t\t\"holy-see-vatican-city-state\",\n\t\t\t\"rwanda\",\n\t\t\t\"saint-vincent-and-the-grenadines\",\n\t\t\t\"virgin-islands\",\n\t\t\t\"congo-brazzaville\",\n\t\t\t\"guyana\",\n\t\t\t\"haiti\",\n\t\t\t\"marshall-islands\",\n\t\t\t\"singapore\",\n\t\t\t\"bhutan\",\n\t\t\t\"ghana\",\n\t\t\t\"mozambique\",\n\t\t\t\"antigua-and-barbuda\",\n\t\t\t\"cocos-keeling-islands\",\n\t\t\t\"cyprus\",\n\t\t\t\"latvia\",\n\t\t\t\"lebanon\",\n\t\t\t\"cook-islands\",\n\t\t\t\"isle-of-man\",\n\t\t\t\"libya\",\n\t\t\t\"netherlands\",\n\t\t\t\"new-caledonia\",\n\t\t\t\"niue\",\n\t\t\t\"thailand\",\n\t\t\t\"egypt\",\n\t\t\t\"faroe-islands\",\n\t\t\t\"south-georgia-and-the-south-sandwich-islands\",\n\t\t\t\"algeria\",\n\t\t\t\"brazil\",\n\t\t\t\"central-african-republic\",\n\t\t\t\"czech-republic\",\n\t\t\t\"ecuador\",\n\t\t\t\"gabon\",\n\t\t\t\"zimbabwe\",\n\t\t\t\"peru\",\n\t\t\t\"saint-pierre-and-miquelon\",\n\t\t\t\"kosovo\",\n\t\t\t\"tonga\",\n\t\t\t\"south-sudan\",\n\t\t\t\"colombia\",\n\t\t\t\"germany\",\n\t\t\t\"lesotho\",\n\t\t\t\"falkland-islands-malvinas\",\n\t\t\t\"saudi-arabia\",\n\t\t\t\"aruba\",\n\t\t\t\"swaziland\",\n\t\t\t\"united-states\",\n\t\t\t\"antarctica\",\n\t\t\t\"cuba\",\n\t\t\t\"monaco\",\n\t\t\t\"serbia\",\n\t\t\t\"anguilla\",\n\t\t\t\"maldives\",\n\t\t\t\"romania\",\n\t\t\t\"uganda\",\n\t\t\t\"japan\",\n\t\t\t\"belarus\",\n\t\t\t\"france\",\n\t\t\t\"western-sahara\",\n\t\t\t\"iraq\",\n\t\t\t\"norway\",\n\t\t\t\"philippines\",\n\t\t\t\"bahamas\",\n\t\t\t\"dominican-republic\",\n\t\t\t\"macao-sar-china\",\n\t\t\t\"bermuda\",\n\t\t\t\"pakistan\",\n\t\t\t\"pitcairn\",\n\t\t\t\"tanzania\",\n\t\t\t\"bolivia\",\n\t\t\t\"kazakhstan\",\n\t\t\t\"kyrgyzstan\",\n\t\t\t\"taiwan\",\n\t\t\t\"armenia\",\n\t\t\t\"svalbard-and-jan-mayen-islands\",\n\t\t\t\"sweden\",\n\t\t\t\"togo\",\n\t\t\t\"fiji\",\n\t\t\t\"martinique\",\n\t\t\t\"montenegro\",\n\t\t\t\"suriname\",\n\t\t\t\"venezuela\",\n\t\t\t\"angola\",\n\t\t\t\"macedonia\",\n\t\t\t\"mauritius\",\n\t\t\t\"mayotte\",\n\t\t\t\"senegal\",\n\t\t\t\"south-africa\",\n\t\t\t\"syria\",\n\t\t\t\"liechtenstein\",\n\t\t\t\"netherlands-antilles\",\n\t\t\t\"croatia\",\n\t\t\t\"djibouti\",\n\t\t\t\"mexico\",\n\t\t\t\"belize\",\n\t\t\t\"guinea-bissau\",\n\t\t\t\"mongolia\",\n\t\t\t\"poland\",\n\t\t\t\"ethiopia\",\n\t\t\t\"kuwait\",\n\t\t\t\"nicaragua\",\n\t\t\t\"papua-new-guinea\",\n\t\t\t\"sierra-leone\",\n\t\t\t\"sudan\",\n\t\t],\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\t// The active selection's index\n\t\t\tactiveSuggestion: 0,\n\t\t\t// The suggestions that match the user's input\n\t\t\tfilteredSuggestions: [],\n\t\t\t// Whether or not the suggestion list is shown\n\t\t\tshowSuggestions: false,\n\t\t\t// What the user has entered\n\t\t\tuserInput: \"\",\n\t\t};\n\t}\n\n\t// Event fired when the input value is changed\n\tonChange = (e) => {\n\t\tconst { suggestions } = this.props;\n\t\tconst userInput = e.currentTarget.value;\n\n\t\t// Filter our suggestions that don't contain the user's input\n\t\tconst filteredSuggestions = suggestions.filter(\n\t\t\t(suggestion) =>\n\t\t\t\tsuggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n\t\t);\n\n\t\t// Update the user input and filtered suggestions, reset the active\n\t\t// suggestion and make sure the suggestions are shown\n\t\tthis.setState({\n\t\t\tactiveSuggestion: 0,\n\t\t\tfilteredSuggestions,\n\t\t\tshowSuggestions: true,\n\t\t\tuserInput: e.currentTarget.value,\n\t\t});\n\t};\n\n\t// Event fired when the user clicks on a suggestion\n\tonClick = (e) => {\n\t\t// Update the user input and reset the rest of the state\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tactiveSuggestion: 0,\n\t\t\t\tfilteredSuggestions: [],\n\t\t\t\tshowSuggestions: false,\n\t\t\t\tuserInput: e.currentTarget.innerText,\n\t\t\t},\n\t\t\t() => this.props.newCountry(e, this.state.userInput)\n\t\t);\n\t};\n\n\t// Event fired when the user presses a key down\n\tonKeyDown = (e) => {\n\t\tconst { activeSuggestion, filteredSuggestions } = this.state;\n\n\t\t// User pressed the enter key, update the input and close the\n\t\t// suggestions\n\t\tif (e.keyCode === 13) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tactiveSuggestion: 0,\n\t\t\t\t\tshowSuggestions: false,\n\t\t\t\t\tuserInput: filteredSuggestions[activeSuggestion],\n\t\t\t\t},\n\t\t\t\t() => this.props.newCountry(e, this.state.userInput)\n\t\t\t);\n\t\t}\n\t\t// User pressed the up arrow, decrement the index\n\t\telse if (e.keyCode === 38) {\n\t\t\tif (activeSuggestion === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tactiveSuggestion: activeSuggestion - 1,\n\t\t\t});\n\t\t}\n\t\t// User pressed the down arrow, increment the index\n\t\telse if (e.keyCode === 40) {\n\t\t\tif (activeSuggestion - 1 === filteredSuggestions.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tactiveSuggestion: activeSuggestion + 1,\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tonChange,\n\t\t\tonClick,\n\t\t\tonKeyDown,\n\t\t\tstate: {\n\t\t\t\tactiveSuggestion,\n\t\t\t\tfilteredSuggestions,\n\t\t\t\tshowSuggestions,\n\t\t\t\tuserInput,\n\t\t\t},\n\t\t} = this;\n\n\t\tlet suggestionsListComponent;\n\n\t\tif (showSuggestions && userInput) {\n\t\t\tif (filteredSuggestions.length) {\n\t\t\t\tsuggestionsListComponent = (\n\t\t\t\t\t<ul className=\"suggestions\">\n\t\t\t\t\t\t{filteredSuggestions.map((suggestion, index) => {\n\t\t\t\t\t\t\tlet className;\n\n\t\t\t\t\t\t\t// Flag the active suggestion with a class\n\t\t\t\t\t\t\tif (index === activeSuggestion) {\n\t\t\t\t\t\t\t\tclassName = \"suggestion-active\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\t\tkey={suggestion}\n\t\t\t\t\t\t\t\t\tonClick={onClick}>\n\t\t\t\t\t\t\t\t\t{suggestion}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tsuggestionsListComponent = (\n\t\t\t\t\t<div className=\"no-suggestions\">\n\t\t\t\t\t\t<em>No suggestions, you're on your own!</em>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tonKeyDown={onKeyDown}\n\t\t\t\t\tvalue={userInput}\n\t\t\t\t\tplaceholder=\"Press Enter to Search\"\n\t\t\t\t/>\n\t\t\t\t{suggestionsListComponent}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport \"./css/Footer.css\";\n\nexport default class Footer extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<footer>\n\t\t\t\t<h3>Covid-19 Tracker</h3>\n\t\t\t\t<p>Created by Yash Gupta</p>\n\t\t\t\t<div className=\"social\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://www.linkedin.com/in/yash-gupta-575679179/\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\tLinkedIn\n\t\t\t\t\t</a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://www.github.com/yashg160\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\tGithub\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"warnings\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tI take no responsibility for the authenticity of the\n\t\t\t\t\t\tdata provided\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Use at your own risk</p>\n\t\t\t\t</div>\n\n\t\t\t\t<p>\n\t\t\t\t\tData provided by{\" \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://www.covid19api.com\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\tapi.covid19api.com\n\t\t\t\t\t</a>{\" \"}\n\t\t\t\t\tand{\" \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://api.covid19india.org\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\tapi.covid19india.org\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</footer>\n\t\t);\n\t}\n}\n","import * as ActionTypes from \"./ActionTypes\";\nconst baseUrl = \"https://api.covid19api.com\";\nconst indiaUrl = \"https://api.covid19india.org/data.json\";\n\nexport const fetchGlobalData = () => (dispatch) => {\n\tdispatch(loadingGlobalData);\n\n\treturn fetch(baseUrl + \"/summary\")\n\t\t.then((response) => {\n\t\t\tif (!response.ok) throw Error();\n\t\t\telse return response;\n\t\t})\n\t\t.then((response) => response.json())\n\t\t.then((data) => dispatch(addGlobalData(data)))\n\t\t.catch((error) => dispatch(errorGlobalData(error)));\n};\n\nexport const loadingGlobalData = () => ({\n\ttype: ActionTypes.LOADING_GLOBAL,\n\tpayload: null,\n});\n\nexport const addGlobalData = (data) => ({\n\ttype: ActionTypes.ADD_GLOBAL,\n\tpayload: data,\n});\n\nexport const errorGlobalData = (error) => ({\n\ttype: ActionTypes.ERROR_GLOBAL,\n\tpayload: error,\n});\n\nexport const fetchCountryData = (country) => (dispatch) => {\n\tdispatch(loadingCountryData(country));\n\n\treturn fetch(baseUrl + `/live/country/${country}/status/confirmed`)\n\t\t.then((response) => {\n\t\t\tif (!response.ok) throw Error();\n\t\t\telse return response;\n\t\t})\n\t\t.then((response) => response.json())\n\t\t.then((data) => dispatch(addCountryData(country, data)))\n\t\t.catch((error) => dispatch(errorCountryData(country, error)));\n};\n\nexport const loadingCountryData = (country) => ({\n\ttype: ActionTypes.LOADING_COUNTRY,\n\tcountry,\n\tpayload: null,\n});\n\nexport const addCountryData = (country, data) => ({\n\ttype: ActionTypes.ADD_COUNTRY,\n\tcountry,\n\tpayload: data,\n});\nexport const errorCountryData = (country, error) => ({\n\ttype: ActionTypes.ERROR_COUNTRY,\n\tcountry,\n\tpayload: error,\n});\n\nexport const fetchIndiaData = () => (dispatch) => {\n\tdispatch(loadingIndiaData());\n\n\tfetch(indiaUrl)\n\t\t.then((response) => {\n\t\t\tconsole.log(response);\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tconsole.log(response);\n\t\t\treturn response.body.getReader();\n\t\t})\n\t\t.then((reader) => reader.read())\n\t\t.then((utfObj) => {\n\t\t\tvar utf = utfObj.value;\n\t\t\tvar td = new TextDecoder(\"utf-8\");\n\t\t\tvar jsonData = JSON.parse(td.decode(utf));\n\t\t\treturn jsonData;\n\t\t})\n\t\t.then((jsonData) => {\n\t\t\tconsole.log(jsonData);\n\n\t\t\t// All the data that is sent through the India reducer;\n\t\t\tlet data = {\n\t\t\t\tindiaData: [],\n\t\t\t\tindiaChartData: {\n\t\t\t\t\tlabels: [],\n\t\t\t\t\tdatasets: [],\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// Create the empty objects for total, deaths and recovered. These will be pushed to the datasets array in chart data\n\t\t\tlet totalConfirmed = {\n\t\t\t\tlabel: \"Total Confirmed\",\n\t\t\t\tdata: [],\n\t\t\t\tborderColor: \"rgba(255, 0, 0, 0.6)\",\n\t\t\t\tpointBackgroundColor: \"rgba(255, 0,0,0.8)\",\n\t\t\t\thoverBorderColor: \"rgba(255,0,0,0.9)\",\n\t\t\t\tpointHoverRadius: 6,\n\t\t\t};\n\n\t\t\tlet totalDeaths = {\n\t\t\t\tlabel: \"Total Deaths\",\n\t\t\t\tdata: [],\n\t\t\t\tborderColor: \"rgba(200,200,200,0.6)\",\n\t\t\t\tpointBackgroundColor: \"rgba(200, 200, 200, 1)\",\n\t\t\t\thoverBorderColor: \"rgba(230,230,230,1)\",\n\t\t\t\tpointHoverRadius: 6,\n\t\t\t};\n\n\t\t\tlet totalRecovered = {\n\t\t\t\tlabel: \"Total Recovered\",\n\t\t\t\tdata: [],\n\t\t\t\tborderColor: \"rgba(0,255,0, 0.6)\",\n\t\t\t\tpointBackgroundColor: \"rgba(0, 255, 0, 0.8)\",\n\t\t\t\thoverBorderColor: \"rgba(0,255,0,0.9)\",\n\t\t\t\tpointHoverRadius: 6,\n\t\t\t};\n\n\t\t\t// Here all the statewise data is retrieved and processed.\n\t\t\tvar stateData = jsonData.statewise;\n\t\t\tfor (let i = 1; i < 38; i++) {\n\t\t\t\tvar state = stateData[i];\n\t\t\t\tdata.indiaData.push({\n\t\t\t\t\tactive: state.active,\n\t\t\t\t\tconfirmed: state.confirmed,\n\t\t\t\t\tdeaths: state.deaths,\n\t\t\t\t\trecovered: state.recovered,\n\t\t\t\t\tstateName: state.state,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Here all the chart data is processed.\n\t\t\tvar chartData = jsonData.cases_time_series;\n\t\t\t// Start from index 40 to remove previous values that are all same. This prevents the chart from becoming congested.\n\t\t\tfor (let i = 40; i < chartData.length; i++) {\n\t\t\t\tvar chartPoint = chartData[i];\n\n\t\t\t\t// Use the dates of the data points as labels for the x axis\n\t\t\t\tdata.indiaChartData.labels.push(chartPoint.date);\n\n\t\t\t\ttotalConfirmed.data.push(chartPoint.totalconfirmed);\n\t\t\t\ttotalDeaths.data.push(chartPoint.totaldeceased);\n\t\t\t\ttotalRecovered.data.push(chartPoint.totalrecovered);\n\t\t\t}\n\n\t\t\tdata.indiaChartData.datasets.push(totalConfirmed);\n\t\t\tdata.indiaChartData.datasets.push(totalDeaths);\n\t\t\tdata.indiaChartData.datasets.push(totalRecovered);\n\n\t\t\treturn data;\n\t\t})\n\t\t.then((data) => dispatch(addIndiaData(data)))\n\t\t.catch((err) => dispatch(errorIndiaData(err)));\n};\n\nexport const loadingIndiaData = () => ({\n\ttype: ActionTypes.LOADING_INDIA,\n\tpayload: null,\n});\n\nexport const addIndiaData = (data) => ({\n\ttype: ActionTypes.ADD_INDIA,\n\tpayload: data,\n});\n\nexport const errorIndiaData = (error) => ({\n\ttype: ActionTypes.ERROR_INDIA,\n\tpayload: error,\n});\n","import React from \"react\";\nimport AutocompleteText from \"./AutocompleteText\";\nimport Footer from \"./Footer\";\nimport \"./css/App.css\";\nimport { Line } from \"react-chartjs-2\";\n\nimport {\n\tfetchGlobalData,\n\tfetchCountryData,\n\tfetchIndiaData,\n} from \"./redux/ActionCreators\";\nimport { connect } from \"react-redux\";\n\nclass Covid extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchGlobalData();\n\t\tthis.props.fetchCountryData(\"india\");\n\t\tthis.props.fetchIndiaData();\n\t}\n\n\tnewCountry(country) {\n\t\tconsole.log(country);\n\t\tthis.props.fetchCountryData(country);\n\t}\n\n\trender() {\n\t\tconsole.log(this.props);\n\t\treturn (\n\t\t\t<div className=\"main\">\n\t\t\t\t<div id=\"navbar\">\n\t\t\t\t\t<h3>COVID-19 TRACKER</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"card-container\">\n\t\t\t\t\t\t<div className=\"card red-card\">\n\t\t\t\t\t\t\t{this.props.globalError === \"ERR_TRUE\" ? (\n\t\t\t\t\t\t\t\t<p>error</p>\n\t\t\t\t\t\t\t) : this.props.globalLoading ? (\n\t\t\t\t\t\t\t\t<div className=\"loading\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"card-title\">World Total</p>\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-content red\">\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.props.global.Global\n\t\t\t\t\t\t\t\t\t\t\t\t.TotalConfirmed\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"card  neutral-card\">\n\t\t\t\t\t\t\t{this.props.globalError === \"ERR_TRUE\" ? (\n\t\t\t\t\t\t\t\t<p>error</p>\n\t\t\t\t\t\t\t) : this.props.globalLoading ? (\n\t\t\t\t\t\t\t\t<div className=\"loading\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"card-title\">World Deaths</p>\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-content neutral\">\n\t\t\t\t\t\t\t\t\t\t{this.props.global.Global.TotalDeaths}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"card green-card\">\n\t\t\t\t\t\t\t{this.props.globalError === \"ERR_TRUE\" ? (\n\t\t\t\t\t\t\t\t<p>error</p>\n\t\t\t\t\t\t\t) : this.props.globalLoading ? (\n\t\t\t\t\t\t\t\t<div className=\"loading\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\tWorld Recovered\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-content green\">\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.props.global.Global\n\t\t\t\t\t\t\t\t\t\t\t\t.TotalRecovered\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 className=\"instruction\">Country Name</h2>\n\t\t\t\t\t<AutocompleteText\n\t\t\t\t\t\tnewCountry={(e, country) => this.newCountry(country)}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"card-container\">\n\t\t\t\t\t\t<div className=\"card red-card\">\n\t\t\t\t\t\t\t{this.props.countryError === \"ERR_TRUE\" ? (\n\t\t\t\t\t\t\t\t<p>error</p>\n\t\t\t\t\t\t\t) : this.props.countryLoading ? (\n\t\t\t\t\t\t\t\t<div className=\"loading\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\t{this.props.country[0].Country} Total\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-content red\">\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.props.country.slice(-1)[0]\n\t\t\t\t\t\t\t\t\t\t\t\t.Confirmed\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"card neutral-card\">\n\t\t\t\t\t\t\t{this.props.countryError === \"ERR_TRUE\" ? (\n\t\t\t\t\t\t\t\t<p>error</p>\n\t\t\t\t\t\t\t) : this.props.countryLoading ? (\n\t\t\t\t\t\t\t\t<div className=\"loading\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\t{this.props.country[0].Country} Deaths\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-content neutral\">\n\t\t\t\t\t\t\t\t\t\t{this.props.country.slice(-1)[0].Deaths}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"card green-card\">\n\t\t\t\t\t\t\t{this.props.countryError === \"ERR_TRUE\" ? (\n\t\t\t\t\t\t\t\t<p>error</p>\n\t\t\t\t\t\t\t) : this.props.countryLoading ? (\n\t\t\t\t\t\t\t\t<div className=\"loading\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\t{this.props.country[0].Country}{\" \"}\n\t\t\t\t\t\t\t\t\t\tRecovered\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-content green\">\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.props.country.slice(-1)[0]\n\t\t\t\t\t\t\t\t\t\t\t\t.Recovered\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"card yellow-card\">\n\t\t\t\t\t\t\t{this.props.countryError === \"ERR_TRUE\" ? (\n\t\t\t\t\t\t\t\t<p>error</p>\n\t\t\t\t\t\t\t) : this.props.countryLoading ? (\n\t\t\t\t\t\t\t\t<div className=\"loading\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"card-title\">\n\t\t\t\t\t\t\t\t\t\t{this.props.country[0].Country} Active\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-content yellow\">\n\t\t\t\t\t\t\t\t\t\t{this.props.country.slice(-1)[0].Active}\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h2 className=\"instruction\">India Details</h2>\n\t\t\t\t\t<div className=\"india-cards-container\">\n\t\t\t\t\t\t{this.props.indiaError === \"ERR_TRUE\" ? (\n\t\t\t\t\t\t\t<p>error</p>\n\t\t\t\t\t\t) : this.props.indiaLoading ? (\n\t\t\t\t\t\t\t<div className=\"loading\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\tthis.props.india.indiaData.map((state) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"india-card\"\n\t\t\t\t\t\t\t\t\tkey={state.stateName}>\n\t\t\t\t\t\t\t\t\t<p className=\"india-card-title\">\n\t\t\t\t\t\t\t\t\t\t{state.stateName}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<div className=\"india-card-content-row\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"india-card-field\">\n\t\t\t\t\t\t\t\t\t\t\tConfirmed\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"india-card-content\">\n\t\t\t\t\t\t\t\t\t\t\t{state.confirmed}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"india-card-content-row\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"india-card-field\">\n\t\t\t\t\t\t\t\t\t\t\tActive\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"india-card-content\">\n\t\t\t\t\t\t\t\t\t\t\t{state.active}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"india-card-content-row\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"india-card-field\">\n\t\t\t\t\t\t\t\t\t\t\tDeaths\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"india-card-content\">\n\t\t\t\t\t\t\t\t\t\t\t{state.deaths}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"india-card-content-row\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"india-card-field\">\n\t\t\t\t\t\t\t\t\t\t\tRecovered\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"india-card-content\">\n\t\t\t\t\t\t\t\t\t\t\t{state.recovered}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chart\">\n\t\t\t\t\t\t{this.props.indiaLoading ? (\n\t\t\t\t\t\t\t<p>Loading...</p>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Line\n\t\t\t\t\t\t\t\tdata={this.props.india.indiaChartData}\n\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\tlayout: {\n\t\t\t\t\t\t\t\t\t\tpadding: {\n\t\t\t\t\t\t\t\t\t\t\ttop: 32,\n\t\t\t\t\t\t\t\t\t\t\tbottom: 32,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\t\ttext: \"COVID 19 Cases in India\",\n\t\t\t\t\t\t\t\t\t\tfontColor: \"rgba(200, 200, 200, 1)\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tlegend: { display: true },\n\t\t\t\t\t\t\t\t\tscales: {\n\t\t\t\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"rgba(200, 200, 200, 1)\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tbeginAtZero: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\tstepSize: 1000,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontColor:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"rgba(200, 200, 200, 1)\",\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\txAxes: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontColor:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"rgba(200, 200, 200, 1)\",\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tglobal: state.global.data,\n\tglobalLoading: state.global.loading,\n\tglobalError: state.global.errMess,\n\tcountry: state.country.data,\n\tcountryLoading: state.country.loading,\n\tcountryError: state.country.errMess,\n\tindia: state.india.data,\n\tindiaLoading: state.india.loading,\n\tindiaError: state.india.errMess,\n});\n\nexport default connect(mapStateToProps, {\n\tfetchGlobalData,\n\tfetchCountryData,\n\tfetchIndiaData,\n})(Covid);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./redux/configureStore\";\nimport Covid from \"./Covid\";\n\nconst store = ConfigureStore();\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<Covid />\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}